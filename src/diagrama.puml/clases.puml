@startuml

title DriveHub

class Plataforma {
  - vehiculos: Vehiculo[]
  - clientes: Cliente[]
  - reservas: Reserva[]

  + agregarVehiculo(nuevoVehiculo: Vehiculo): void
  + registrarCliente(nuevoCliente: Cliente): void

}
' // Donde el string sea la matricula , flota de vehículos
' // las reservas de sus clientes.


enum ESTADO_VEHICULO {
  DISPONIBLE,
  EN_ALQUILER,
  EN_MANTENIMIENTO,
  NECESITA_LIMPIEZA,
}

abstract class Vehiculo {
  - matricula: string
  - marca: string
  - modelo: string
  - estado: EstadoVehiculo
  - kilometrajeActual: number

  + {abstract} calcularTarifa(dias: number, kilometrosRecorridos: number): number

  + getEstadoVehiculo(): ESTADO_VEHICULO
  + cambiarEstado(nuevoEstado: EstadoVehiculo): void
  + estaDisponible(): boolean

}

class Compacto {
  - TARIFA_BASE: number = 30
  - CARGO_KM: number = 0.15
  - KM_LIMITE_DIARIO: number = 100

  --getters y setters--  
  + calcularTarifa(dias: number, kilometrosRecorridos: number): number
}

class Sedan {
  - TARIFA_BASE: number = 50
  - CARGO_KM: number = 0.20

  --getters y setters--    
  + calcularTarifa(dias: number, kilometrosRecorridos: number): number
}

class Suv {
  - TARIFA_BASE: number = 80
  - CARGO_SEGURO_DIA: number = 15
  - CARGO_KM: number = 0.25
  - KM_LIMITE_TOTAL: number = 500

  --getters y setters--  
  + calcularTarifa(dias: number, kilometrosRecorridos: number): number
}

class Cliente {
  - idCliente: number
  - nombre: string
  - apellido: string

  + realizarReserva(r: Reserva): void
  --getters y setters--    
}

class Reserva {
  - fechaInicio: Date
  - fechaFin: Date
  - vehiculoReservado: Vehiculo
  
  --getters y setters--    
  + validarDisponibilidadVehiculo(): boolean
}

class GestionKilometraje {
  - kilometrosRecorridos: number
  - costoTotal: number
  + calcularCosto(): number
}

'Relaciones
' "Un Cliente puede tener cero, una o múltiples reservas"
' Cliente 1 -- 0..* Reserva

Vehiculo <|-- Compacto
Vehiculo <|-- Sedan
Vehiculo <|-- Suv

'// Un cliente puede crear una reserva para un vehículo específico, indicando fecha inicio y fin.

@enduml